<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAD/ASwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6Etoa1kmhtLZri4lWCBPvvVOzhrj/AB+mpareQWWn20s6J/36
        3V+Y1/3ULxPmfhV4nWJ8RdFSaJEllkd22L5affrvLNPkV3T+GvLfAHw6vLGZtT1CBPPRd8FtI+3e1ewW
        0LbPnWscHOtNXmdWH5pLUmtof43rQtoajtofu1oQw13nqRiR200c9zPFFu8y3ZUl+RlXcV3fK38VaVtD
        TbaFvn3uv3vl8v8Au1chSsHE6IRJIYatIlOhh/jqx5VYukdkSm/3PkrLvIW3/JWtMnl1RuYV2fJWkaYS
        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
        2bz2eH+KNd33d396uj2DNYyLyJ8ipTXp1y80dtO9vEsk/lt5UO/art/CtZvhiHWk8PWKeIJ7WfW9rPO9
        im2JPm+6v+6laeyNOY0k+58lOSo0+/sqvf6xZ6a+y4nWN/7m+qShT+IOb+Y0k+5UflLWWnirT9i/v0rU
        RvMUN5T1p7ktiVI5N/Enz/I1Rvrf+1XCpf8A+1Q+pMj/AHq8n61KR57xJ3Sa2v8AeqRNY+f71cKl429N
        9dFols0jq710QqSkVGrzHYWDyT1c/g2VDbQ+WlSTfu3avYjD3TqTI3ff8lV3pzv5e7ZVd08up5SZSIX+
        596qc275fmq1M/lp89VXdq56lIzuQVA/32+apv4/9vbULv8Adrl9mYyZG7/7VQvTn+dG2VC6NIn3qmUT
        PmI3eo3+/sqb+7vqN65eUga/9yo33U7Zvd3em/N81Z8ouYP9YjfPQPuLTUepH/d/PWlg5gT79Sb/AJ/v
        U3+D56Ef5/u1XKHMSI7feqRH8vZUKfc2bqmhRtjb6qMRlhH8tN9WEf5N9V0T5P8AcqR90m2toxL5i0m6
        pEf+DdVdPvpsqZH8ytvZmkWWrbdvq4m35aqp/fqwn8L10Qpm3MXEf7vzVYhdqopNs+SriP8APXVymly4
        j/Iz7qp36ag72L2U9rBGl0r3iXabt8O19yr/AHW31Mm7fWL4z1hdK0Sd93zutTU9yDYSkoo4n4nfFebS
        nl0zR2WP/nrefxf8BrxG/wDE+qXbs6TvI/8AE8j1c1K2vNVv5ZXifY7Vc0TwZqmv3kVvZWbyP/fk+6lf
        ISnUnU7nzVariKs/dOs+EVhNd363FxLLPP8Awv8A3P8Adr3hDhQK5vwf4Pt/B1gsKP596/3pv/ia3POr
        38NRlyn0OGpz5PePD9/mfc/4E9CTfP8AI3/bb/4mqxJmCl18uP8AhRKu20O968X4TyDS0qH567rRLb5P
        nrl9HtvnrtrCHYi7q9LBQ5md9JG1bIsafJVO8fy3qRJVjpzot3Gyv99K+o5Tq5jPSb71D+Xvb5qbcloH
        ZKpvPG/zruFYuJjImm27Nn/fNU3m+dqJ7neiotQu/wDH/wB9VzyIB9u/71VZn+dac8g3/d/hqu71xyMR
        z7URtn3Hqu+2N/vUNyjbqYyonzsTXPIyFd/kqFH+f5Kk3+YlRofLddq1iyrg6K70Ii7Pkb79R71k+R6a
        gMaS7W+/WQXJH++tD7fl3vUaO3y/30p2Rv8Au/xUBcfUqfcV6hf7lCPl1Zq2GTIi/wB6pt+xG+9vqsip
        9/JqVJ9+7atUQSQzbH+/V2qSIvzOlTeap37v463iVctQ7Y337qm+WNF/26qQgI6/MalgfO7d9x62iaXN
        BH37fmq0j7EWs9H2Ou6rSTLs+7XZTNS5bbX+/VhHXf8AerNSarSfv5q6IxNTUtv93zI6zdS0e31V99x+
        8q8k8ce1F3VG7rVSjGUfeAyU8JaXH87wLJWkkNvaoqW6pbp/cjSh5s/eqJ1H96uNUqcdomkYxiSu6ybn
        pm//AGKiebY++kquU05j/9k=
</value>
  </data>
</root>